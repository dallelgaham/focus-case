{"version":3,"sources":["hooks/useD3.js","components/BarChart/BarChart.js","data/functions.js","containers/BarChartContainer.js","containers/AvgTechImpactChart.js","components/LineChart/LineChart.js","containers/PatentingTrendChart.js","App.js","reportWebVitals.js","index.js"],"names":["useD3","renderChartFn","dependencies","ref","React","useRef","useEffect","d3","current","BarChart","data","comma","ordinate","wrap","text","width","each","word","this","words","split","reverse","line","lineNumber","y","attr","dy","parseFloat","tspan","append","pop","push","join","node","getComputedTextLength","svg","margin","colors","i","x","domain","map","d","rangeRound","padding","nice","select","call","g","style","tickSize","selectAll","bandwidth","tickSizeOuter","bars","on","e","transition","duration","enter","length","id","className","owners","Array","from","Set","item","Owner","BarChartContainer","owner","filtered","filter","patent","nbr","sort","a","b","AvgTechImpactChart","techImpactSum","reduce","replace","avg","toFixed","LineChart","remove","PatentingTrendChart","year","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b22aaa2c.chunk.js","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => { };\n  }, dependencies);\n  return ref;\n}","import { useD3 } from '../../hooks/useD3';\nimport React from 'react'\nimport * as d3 from 'd3';\nimport \"./BarChart.styles.css\";\n\nexport default function BarChart({ data, comma, ordinate }) {\n\n  const wrap = (text, width) => {\n    text.each(function () {\n      var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1, // ems\n        y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")),\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\"\"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  }\n  const ref = useD3((svg) => {\n    const height = 500;\n    const width = 1000;\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n\n    const colors = (i) => i > 1 ? d3.interpolateOranges(i / 100) : d3.interpolateOranges(i);\n    const x = d3\n      .scaleBand()\n      .domain(data.map((d) => d[comma]))\n      .rangeRound([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, (d) => d[ordinate])]).nice()\n      .rangeRound([height - margin.bottom, margin.top]);\n\n    const xAxis = (g) =>\n      g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .style(\"color\", \"#4b5563\")\n        .call(\n          d3\n            .axisBottom(x)\n            .tickSize(0)\n        );\n\n    const y1Axis = (g) =>\n      g\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .style(\"color\", \"#4b5563\")\n        .call(\n          d3.axisLeft(y)\n            .tickSizeOuter(0)\n        )\n        .call((g) =>\n          g\n            .append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(data.y)\n        );\n\n\n    svg.select(\".x-axis\")\n      //.call((g) => g.select(\".domain\").remove())\n      .call(xAxis)\n      .selectAll(\".tick text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"text-align\", \"center\")\n      .attr(\"dx\", 0)\n      .attr(\"dy\", \"1em\")\n      .call(wrap, x.bandwidth())\n\n    svg.select('.x-axis').append(\"text\").text(\"Companies\")\n      .attr(\"x\", width)\n      .style(\"color\", \"#505050\")\n\n    svg.select(\".y-axis\")\n      .call(y1Axis);\n\n    const bars = svg\n      .select(\".plot-area\")\n      .selectAll(\".bar\")\n\n    bars\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"fill\", d => colors(d[ordinate]))\n      .attr(\"x\", (d) => x(d[comma]))\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", (d) => y(d[ordinate]))\n      .attr(\"height\", (d) => 0)\n      .on(\"mouseover\", function (e) {\n        d3.select(this)\n          .attr(\"fill\", \"#ffab84\")\n      })\n      .on(\"mouseleave\", function () {\n        d3.select(this)\n          .attr(\"fill\", d => colors(d[ordinate]));\n      })\n      .transition()\n      .duration(750)\n      .attr(\"y\", (d) => y(d[ordinate]))\n      .attr(\"height\", (d) => y(0) - y(d[ordinate]))\n\n    bars.data(data)\n      .enter()\n      .append(\"text\")\n      .text(d => d[ordinate])\n      .attr(\"y\", d => y(d[ordinate]) - 10)\n      .attr(\"x\", d => x(d[comma]) + x.bandwidth() / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#505050\")\n      .style(\"font-family\", \"sans-serif\")\n      .style(\"font-size\", 12)\n      .style(\"opacity\", 0)\n      .transition()\n      .duration(1500)\n      .style(\"opacity\", 1);\n\n  }, [data.length]);\n\n\n\n\n  return (\n    <svg\n      id=\"chart-bar\"\n      ref={ref}\n    >\n      <g className=\"plot-area\" />\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n\n  )\n}\n","import data from './data.json';\n\nconst owners = Array.from(new Set(data.map(item => item.Owner)));\n\nexport const patentsByCompanies = () => {\n  return owners.map(owner => {\n    const filtered = data.filter(patent => patent.Owner === owner)\n    return { owner: owner, nbr: filtered.length };\n  })\n    .sort((a, b) => b.nbr - a.nbr)\n    .filter(item => item.nbr > 20)\n}\n\nexport const averageTechImpactByCompanies = () => {\n  return owners.map(owner => {\n    const filtered = data.filter(patent => patent.Owner === owner);\n\n    const techImpactSum = filtered.reduce((acc = 0, patent) => acc + parseFloat(patent[\"Impact score\"].replace(',', '.')), 0)\n    return { owner: owner, nbr: filtered.length, avg: (techImpactSum / filtered.length).toFixed(2) };\n  })\n    .sort((a, b) => b.nbr - a.nbr)\n    .filter(item => item.nbr > 20)\n}\n\nexport const patentsByYear = () => {\n  const years = Array.from(new Set(data.map(item => item[\"Patenting date\"].split('/')[2]))).sort((a, b) => a - b);\n  return years.map(\n    year => {\n      const filtered = data.filter(patent => patent[\"Patenting date\"].split('/')[2] === year);\n      return ({ year, nbr: filtered.length })\n    }\n  )\n}\n\nconst statuses = Array.from(new Set(data.map(item => item['Patent status'])))\n\nexport const patentsByStatus = () => {\n  let children = statuses.map(status => {\n    const filtered = data.filter(patent => patent['Patent status'] === status);\n    return { status, value: ((filtered.length / data.length) * 100).toFixed(2) }\n  })\n  return { status: \"All\", value: 100, children }\n\n}","import React from 'react'\nimport BarChart from '../components/BarChart/BarChart'\nimport { patentsByCompanies } from \"../data/functions.js\";\n\nexport default function BarChartContainer() {\n\n  const data = patentsByCompanies();\n\n  return (\n    <div className=\"bg-white p-8 m-8 w-8/12 rounded-2xl shadow\t\">\n      <h1 className=\"text-3xl text-gray-600\ttext-center\t\">Companies which own the most patents</h1>\n      <div className=\"mt-6\">\n        <BarChart data={data} comma=\"owner\" ordinate=\"nbr\" className=\"flex\" />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport BarChart from '../components/BarChart/BarChart'\nimport { averageTechImpactByCompanies } from \"../data/functions.js\";\n\nexport default function AvgTechImpactChart() {\n\n  const data = averageTechImpactByCompanies();\n  return (\n    <div className=\"bg-white p-8 m-8 w-8/12 rounded-2xl shadow\t\">\n      <h1 className=\"text-3xl text-gray-600\ttext-center\t\">Avg. technological impact score of best companies</h1>\n      <div className=\"mt-14\">\n        <BarChart data={data} comma=\"owner\" ordinate=\"avg\" />\n      </div>\n    </div>\n  )\n}\n","import { useD3 } from '../../hooks/useD3';\nimport React from 'react'\nimport * as d3 from 'd3';\nimport \"./LineChart.styles.css\";\n\n\nexport default function LineChart({ data, comma, ordinate }) {\n  const ref = useD3((svg) => {\n    const height = 500;\n    const width = 1000;\n    const margin = { top: 20, right: 60, bottom: 30, left: 60 };\n\n    const x = d3\n      .scaleBand()\n      .domain(data.map((d) => d[comma]))\n      .rangeRound([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, (d) => d[ordinate])]).nice()\n      .rangeRound([height - margin.bottom, margin.top]);\n\n    const xAxis = (g) =>\n      g.attr(\"transform\", `translate(0,${height - margin.bottom})`)\n        .style(\"color\", \"#4b5563\")\n        .call(\n          d3\n            .axisBottom(x)\n            .tickSize(0)\n        );\n\n    const y1Axis = (g) =>\n      g\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .style(\"color\", \"#4b5563\")\n        .call(\n          d3.axisLeft(y)\n            .tickSizeOuter(0)\n        )\n        .call((g) =>\n          g\n            .append(\"text\")\n            .attr(\"x\", -margin.left)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(data.y)\n        );\n\n\n    svg.select(\".x-axis\")\n      .call((g) => g.select(\".domain\").remove())\n      .call(xAxis)\n      .selectAll(\".tick text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"text-align\", \"center\")\n      .attr(\"dx\", 0)\n      .attr(\"dy\", \"1em\")\n\n\n    svg.select(\".y-axis\").call(y1Axis);\n\n    const line = d3.line()\n      .x(d => x(d[\"year\"]) + x.bandwidth() / 2)\n      .y(d => y(d[\"nbr\"]))\n\n\n    svg.append(\"path\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#ffab84\")\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line(data))\n      .attr(\"opacity\", 0)\n      .transition()\n      .duration(750)\n      .attr('opacity', 1)\n\n    // function updatePath(data, line) {\n    //   const updatedPath = d3\n    //     .select(\"path\")\n\n    // }\n    // const pathLength = updatedPath.node().getTotalLength();\n\n\n    // svg\n    //   .select(\".plot-area\")\n    //   .attr(\"fill\", \"#ff7332\")\n    //   .selectAll(\".bar\")\n    //   .data(data)\n    //   .join(\"rect\")\n    //   .attr(\"class\", \"bar\")\n    //   .attr(\"x\", (d) => x(d[comma]))\n    //   .attr(\"width\", x.bandwidth())\n    //   .attr(\"y\", (d) => y(d[ordinate]))\n    //   .attr(\"height\", (d) => y(0) - y(d[ordinate]))\n    //   .on(\"mouseover\", function (e) {\n    //     d3.select(this)\n    //       .attr(\"fill\", \"#ffab84\")\n    //   })\n    //   .on(\"mouseleave\", function () {\n    //     d3.select(this)\n    //       .attr(\"fill\", \"#ff7332\");\n    //   })\n\n  }, [data.length]);\n\n  return (\n    <svg\n      id=\"chart-line\"\n      ref={ref}\n    >\n      <g className=\"plot-area\" />\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n\n  )\n}\n","import React from 'react'\nimport LineChart from '../components/LineChart/LineChart'\nimport { patentsByYear } from '../data/functions'\n\nexport default function PatentingTrendChart() {\n  const data = patentsByYear()\n  return (\n    <div className=\"bg-white p-8 m-8 w-8/12 rounded-2xl shadow\t\">\n      <h1 className=\"text-3xl text-gray-600\ttext-center\t\">Graphene patents evolution per year</h1>\n      <div className=\"mt-6 flex justify-items-center\">\n        <LineChart data={data} comma=\"year\" ordinate=\"nbr\" className=\"flex\" />\n      </div>\n    </div>\n  )\n}\n","import BarChartContainer from './containers/BarChartContainer';\nimport AvgTechImpactChart from './containers/AvgTechImpactChart';\nimport PatentingTrendChart from './containers/PatentingTrendChart';\nfunction App() {\n  return (\n    <div className=\"flex flex-col\titems-center\">\n      <BarChartContainer />\n      <AvgTechImpactChart />\n      <PatentingTrendChart />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}